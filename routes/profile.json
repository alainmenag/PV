{
	"title": "Profile",
	"description": "A profile.",
	"_keywords": ["website", "pages", "presence"],
	"_template": {"src": "/nodes/home.html"},
	"_image": {"src": "/nodes/home/spacex-uj3hvdfQujI-unsplash.jpg"},
	"sections": [
		
		{
			"template": "/templates/profile.html"
		},
		
		{
			"template": "/templates/tabs.html"
		}
		
		, {
			"tab": "#",
			"template": "/templates/bulletins.html",
			"if": "node.data.profile._id"
		}
		
		
	
		, {
			"template": "/templates/form.html",
			"tab": "#",
			"if": "!node.data.profile.readOnly && ['users', 'departments', 'bots'].indexOf(node.data.profile.category) > -1",
			"action": "/api/data?collection=profiles&category=bulletins",
			"method": "POST",
			"reload": true,
			"data": {
				
				"description": {
					"width": "12",
					"height": "100",
					"title": "Post a bulletin:",
					"id": "description",
					"model": false,
					"type": "textarea",
					"required": true
				}
				
			}
		}
		
		
	
		, {
			"template": "/templates/form.html",
			"tab": "#profile",
			"if": "node.data.profile && !node.data.profile.readOnly",
			"title": "Profile",
			"action": "/api/data?collection=profiles&category=users",
			"method": "POST",
			"reload": true,
			"confirm": true,
			"_submittable": false,
			"data": {
				
				"_id": {
					"id": "_id",
					"value": "{{node.data.profile._id}}",
					"type": "hidden"
				}
				
				
				

				
				, "title": {
					"title": "Name",
					"id": "title",
					"value": "{{node.data.profile.title}}",
					"model": false,
					"type": "text"
				}
				
				
				

				
				, "handle": {
					"title": "Handle",
					"id": "id",
					"value": "{{node.data.profile.id}}",
					"model": false,
					"type": "text"
				}
				
				, "assistant": {
					"title": "Assistant",
					"id": "assistant",
					"help": "Grant limited access & forward your communications to another profile.",
					"value": "{{node.data.profile.assistant}}",
					"model": false,
					"type": "text"
				}
				
				, "inbox": {
					"title": "Inbox",
					"id": "inbox",
					"help": "Provide an inbox ID or publicly shared email to receive messages.",
					"value": "{{node.data.profile.inbox}}",
					"model": false,
					"type": "text"
				}
				
				, "image": {
					"title": "Profile Image",
					"id": "image",
					"value": "{{node.data.profile.image}}",
					"model": false,
					"type": "file",
					"accept": "image/*",
					"_onchange": "event.target.form.submit(event);"
				}
				
				

				
				, "cover": {
					"title": "Cover Photo",
					"id": "cover",
					"value": "{{node.data.profile.cover}}",
					"model": false,
					"type": "file",
					"accept": "image/*",
					"_onchange": "event.target.form.submit(event);"
				}
				
				, "website": {
					"title": "Website",
					"id": "website",
					"value": "{{node.data.profile.website}}",
					"model": false,
					"type": "url",
					"width": "12"
				}
				
				, "deactivated": {
					"if": "!node.data.profile.deactivated",
					"title": "Deactivate Profile",
					"id": "deactivated",
					"value": 1,
					"model": false,
					"type": "button",
					"width": "12"
				}
				
				, "activate": {
					"if": "node.data.profile.deactivated",
					"title": "Activate Profile",
					"id": "deactivated",
					"value": 0,
					"model": false,
					"type": "button",
					"width": "12"
				}
				
				, "deleted": {
					"if": "node.data.profile.deactivated",
					"class": "btn-danger",
					"title": "Delete Profile",
					"id": "deleted",
					"value": 1,
					"model": false,
					"type": "button",
					"width": "12"
				}
				
				
			}
		}
		
		
		
		
		, {
			"tab": "#profile",
			"if": "!node.data.profile.readOnly && ['users'].indexOf(node.data.profile.category) > -1",
			"template": "/templates/form.html",
			"title": "Security",
			"action": "/api/profiles",
			"background": "#f2f2f2",
			"method": "POST",
			"reset": true,
			"confirm": true,
			"data": {
				
				"uid": {
					"id": "uid",
					"value": "{{node.data.profile._id}}",
					"type": "hidden"
				},
				
				"password": {
					"id": "password",
					"title": "Password",
					"type": "text",
					"required": true,
					"minlength": 10,
					"help": "* Will also change your access token."
				}
				
			}
		}
		
		


		, {
			"tab": "#profile",
			"if": "!node.data.profile.readOnly && ['users'].indexOf(node.data.profile.category) > -1",
			"title": "API",
			"template": "/templates/list.html",
			"data": [
				{
					"title": "<b>Username: </b>{{node.data.profile._id}}"
				},
				{
					"title": "<b>Domain: </b>oryk.com"
				},
				{
					"title": "<b>Access Token/Password: </b>{{node.data.profile.password || '*****'}}"
				}
			]
		}	
		
		
		
		
		
		
		
	
		, {
			"template": "/templates/form.html",
			"tab": "#greetings",
			"if": "!node.data.profile.readOnly && ['users', 'departments', 'inboxes', 'bots'].indexOf(node.data.profile.category) > -1",
			"title": "Greetings",
			"action": "/api/data?collection=profiles&category=users",
			"method": "POST",
			"reload": true,
			"_confirm": true,
			"data": {
				
				"_id": {
					"id": "_id",
					"value": "{{node.data.profile._id}}",
					"type": "hidden"
				}
				
				, "greetings.greeting.text": {
					"title": "Greeting (Text)",
					"id": "greetings.greeting.text",
					"value": "{{node.data.profile.greetings.greeting.text}}",
					"model": false,
					"type": "text"
				}
				
				, "greetings.greeting.file": {
					"title": "Greeting (MP3)",
					"id": "greetings.greeting.file",
					"value": "{{node.data.profile.greetings.greeting.file}}",
					"model": false,
					"type": "file",
					"accept": "audio/*"
				}
				
				, "greetings.goodbye.text": {
					"title": "Goodbye (Text)",
					"id": "greetings.goodbye.text",
					"value": "{{node.data.profile.greetings.goodbye.text}}",
					"model": false,
					"type": "text"
				}
				
				, "greetings.goodbye.file": {
					"title": "Goodbye (MP3)",
					"id": "greetings.goodbye.file",
					"value": "{{node.data.profile.greetings.goodbye.file}}",
					"model": false,
					"type": "file",
					"accept": "audio/*"
				}
				
				, "greetings.ringback.file": {
					"title": "Ringback (MP3)",
					"id": "greetings.ringback.file",
					"value": "{{node.data.profile.greetings.ringback.file}}",
					"model": false,
					"type": "file",
					"accept": "audio/*"
				}
				
				, "greetings.moh.file": {
					"title": "Music on hold (MOH) (MP3)",
					"id": "greetings.moh.file",
					"value": "{{node.data.profile.greetings.moh.file}}",
					"model": false,
					"type": "file",
					"accept": "audio/*"
				}
				
				, "context.txt.file": {
					"title": "Context File",
					"id": "context.txt.file",
					"value": "{{node.data.profile.context.txt.file}}",
					"model": false,
					"type": "file",
					"accept": "text/*"
				}
				
			}
		}	
		
		
		
		
		
		
		
	
		, {
			"template": "/templates/form.html",
			"tab": "#queue",
			"if": "!node.data.profile.readOnly && ['departments'].indexOf(node.data.profile.category) > -1",
			"title": "Queue",
			"action": "/api/data?collection=profiles&category=departments",
			"method": "POST",
			"key": "node.data.profile",
			"reload": true,
			"confirm": false,
			"data": {
				
				"_id": {
					"id": "_id",
					"value": "{{node.data.profile._id}}",
					"type": "hidden"
				}
				
				, "pin": {
					"title": "PIN",
					"id": "pin",
					"value": "{{node.data.profile.pin}}",
					"model": false,
					"type": "number",
					"placeholder": "123456",
					"min": 100000,
					"required": true
				}
				
				, "queue.strategy": {
					"title": "Strategy",
					"id": "queue.strategy",
					"value": "{{node.data.profile.queue.strategy || 'ring-all'}}",
					"model": false,
					"type": "select",
					"options": [
						{
							"title": "(DEFAULT) Contact all agents simultaneously.",
							"value": "ring-all"
						},
						{
							"title": "Contact the agent who has been idle the longest taking into account their tier level.",
							"value": "longest-idle-agent"
						},
						{
							"title": "Contact the agent in position but remember last tried agent.",
							"value": "round-robin"
						},
						{
							"title": "Contact the agent in order position starting from 1 for every member.",
							"value": "top-down"
						},
						{
							"title": "Contact agent w/ the least handling time.",
							"value": "agent-with-least-talk-time"
						},
						{
							"title": "Contact the least busiest agent.",
							"value": "agent-with-fewest-calls"
						},
						{
							"title": "Contact agents sequentially by tier & order.",
							"value": "sequentially-by-agent-order"
						},
						{
							"title": "Contact agents in random order.",
							"value": "random"
						},
						{
							"title": "Contact agents from top down, but keeping trying the previous members.",
							"value": "ring-progressively"
						}
					]
				}
				
				, "queue.time-base-score": {
					"title": "Time Base Score",
					"id": "queue.time-base-score",
					"value": "{{node.data.profile.queue['time-base-score'] || 'system'}}",
					"model": false,
					"type": "select",
					"options": [
						{
							"title": "(DEFAULT) Add the number of seconds since entering system.",
							"value": "system"
						},
						{
							"title": "Nobody's score gets increased upon entering the queue.",
							"value": "queue"
						}
					]
				}
				
				, "queue.max-wait-time": {
					"title": "Max Wait Time",
					"id": "queue.max-wait-time",
					"value": "{{node.data.profile.queue['max-wait-time'] || 0}}",
					"model": false,
					"type": "number",
					"placeholder": "0",
					"min": 0
				}
				
				, "queue.max-wait-time-with-no-agent": {
					"title": "Max Wait Time w/ No Agent",
					"id": "queue.max-wait-time-with-no-agent",
					"value": "{{node.data.profile.queue['max-wait-time-with-no-agent'] || 1}}",
					"model": false,
					"type": "number",
					"placeholder": "1",
					"min": 0
				}
				
				, "queue.max-wait-time-with-no-agent-time-reached": {
					"title": "Max Wait Time w/ No Agent Time Reached",
					"id": "queue.max-wait-time-with-no-agent-time-reached",
					"value": "{{node.data.profile.queue['max-wait-time-with-no-agent-time-reached'] || 1}}",
					"model": false,
					"type": "number",
					"placeholder": "1",
					"min": 0
				}
				
				, "queue.tier-rules-apply": {
					"title": "Tier Rules Apply",
					"id": "queue.tier-rules-apply",
					"value": "{{node.data.profile.queue['tier-rules-apply'] || false}}",
					"model": false,
					"type": "boolean"
				}
				
				, "queue.tier-rule-wait-second": {
					"title": "Tier Rule Wait Second",
					"id": "queue.tier-rule-wait-second",
					"value": "{{node.data.profile.queue['tier-rule-wait-second'] || 300}}",
					"model": false,
					"type": "number",
					"placeholder": "300",
					"min": 0
				}
				
				, "queue.tier-rule-wait-multiply-level": {
					"title": "Tier Rule Wait Multiply Level",
					"id": "queue.tier-rule-wait-multiply-level",
					"value": "{{node.data.profile.queue['tier-rule-wait-multiply-level'] || false}}",
					"model": false,
					"type": "boolean"
				}
				
				, "queue.tier-rule-no-agent-no-wait": {
					"title": "Tier Rule No Agent No Wait",
					"id": "queue.tier-rule-no-agent-no-wait",
					"value": "{{node.data.profile.queue['tier-rule-no-agent-no-wait'] || false}}",
					"model": false,
					"type": "boolean"
				}
				
				, "queue.discard-abandoned-after": {
					"title": "Discard Abandoned After",
					"id": "queue.discard-abandoned-after",
					"value": "{{node.data.profile.queue['discard-abandoned-after'] || 60}}",
					"model": false,
					"type": "number",
					"placeholder": "60",
					"min": 0
				}
				
				, "queue.abandoned-resume-allowed": {
					"title": "Abandoned Resume Allowed",
					"id": "queue.abandoned-resume-allowed",
					"value": "{{node.data.profile.queue['abandoned-resume-allowed'] || false}}",
					"model": false,
					"type": "boolean"
				}
				
				, "queue.skip-agents-with-external-calls": {
					"title": "Skip Agents w/ External Sessions",
					"id": "queue.skip-agents-with-external-calls",
					"value": "{{node.data.profile.queue['skip-agents-with-external-calls'] || false}}",
					"model": false,
					"type": "boolean"
				}
				
				
				
			}
		}
		

	],
	"resources": [
		{
			"src": "profiles.node",
			"fn": "get",
			"key": "profile"
		},
		{
			"src": "data.node",
			"fn": "list",
			"key": "bulletins",
			"limit": 5,
			"sort": {"created": -1},
			"category": "bulletins",
			"collection": "profiles"
		}
	]
}


